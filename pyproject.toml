[project]
name = "model_corona"
description = "Implements a PFSS model with stellar prominences."
readme = "README.rst"
requires-python = ">=3.8"
license = { file = "licenses/LICENSE.rst", content-type = "text/plain" }
authors = [
  { name = "St Andrews Cool Stars Group", email = "cb432@st-andrews.ac.uk" },
]
dependencies = [
    "astropy",
    "scipy",
    "scikit-image"
  
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-doctestplus",
]
docs = [
    "sphinx",
    "sphinx-automodapi",
    "tomli; python_version <\"3.11\"",
]


[project.urls]
repository = "https://github.com/St-andrews-cool-stars/model_corona.git" 


[build-system]
requires = [
  "setuptools>=61.2",
  "setuptools_scm[toml]>=3.4",
  "wheel",

]
build-backend = "setuptools.build_meta"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]

[tool.setuptools_scm]
write_to = "model_corona/version.py"

[tool.pytest.ini_options]
testpaths = [
  "model_corona",
  "docs",
]
doctest_plus = "enabled"
text_file_format = "rst"
addopts = "--doctest-rst"

[tool.coverage.run]
omit = [
 "model_corona/__init*",
 "model_corona/conftest.py",
 "model_corona/*setup_package*",
 "model_corona/tests/*",
 "model_corona/*/tests/*",
 "model_corona/extern/*",
 "model_corona/version*",
 "*/model_corona/__init*",
 "*/model_corona/conftest.py",
 "*/model_corona/*setup_package*",
 "*/model_corona/tests/*",
 "*/model_corona/*/tests/*",
 "*/model_corona/extern/*",
 "*/model_corona/version*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_", 
]
